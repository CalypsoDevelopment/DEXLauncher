{
	"id": "a3025ef12b5cbc4029adc6f36ab23344",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"v2-core-master/contracts/DEXV2ERC20.sol": {
				"content": "pragma solidity =0.5.16;\n\nimport './interfaces/IDEXV2ERC20.sol';\nimport './libraries/SafeMath.sol';\n\ncontract DEXV2ERC20 is IDEXV2ERC20 {\n    using SafeMath for uint;\n\n    string public name;\n    string public symbol;\n    uint8 public constant decimals = 18;\n    uint  public totalSupply;\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    constructor(string memory _name, string memory _symbol) public {\n        name = _name;\n        symbol = _symbol;\n        uint chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n                keccak256(bytes(name)),\n                keccak256(bytes('1')),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n        require(deadline >= block.timestamp, 'DEXV2: EXPIRED');\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                '\\x19\\x01',\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'DEXV2: INVALID_SIGNATURE');\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"v2-core-master/contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity =0.5.16;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, 'ds-math-add-overflow');\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\n    }\n}\n"
			},
			"v2-core-master/contracts/interfaces/IDEXV2ERC20.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IDEXV2ERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"v2-core-master/contracts/DEXV2ERC20.sol": {
				"DEXV2ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":101:3460  contract DEXV2ERC20 is IDEXV2ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":62:83   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":114:128   */\n  dup3\n  add\n    /* \"--CODEGEN--\":138:169   */\n  dup6\n  dup2\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":213:223   */\n  dup3\n  mload\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":244:273   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":285:328   */\n  dup3\n  dup3\n  add\n    /* \"--CODEGEN--\":282:340   */\n  dup9\n  lt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":372:397   */\n  dup3\n  mstore\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  dup2\n  mload\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":411:425   */\n  swap2\n  dup3\n  add\n  swap3\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n    /* \"--CODEGEN--\":411:425   */\n  dup4\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":90:101   */\n  dup2\n  dup2\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n  dup3\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":62:83   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":114:128   */\n  dup3\n  add\n    /* \"--CODEGEN--\":138:169   */\n  dup6\n  dup2\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":213:223   */\n  dup3\n  mload\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":244:273   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":285:328   */\n  dup3\n  dup3\n  add\n    /* \"--CODEGEN--\":282:340   */\n  dup9\n  lt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":372:397   */\n  dup3\n  mstore\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  dup2\n  mload\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":411:425   */\n  swap2\n  dup3\n  add\n  swap3\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n    /* \"--CODEGEN--\":411:425   */\n  dup4\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":90:101   */\n  dup2\n  dup2\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n  dup3\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":863:1397  constructor(string memory _name, string memory _symbol) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":936:948  name = _name */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":936:940  name */\n  0x00\n  swap1\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":936:948  name = _name */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":958:974  symbol = _symbol */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":958:964  symbol */\n  0x01\n  swap1\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":958:974  symbol = _symbol */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1136:1231  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1040:1047  chainid */\n  chainid\n  swap1\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1136:1231  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1265:1269  name */\n  0x00\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1249:1271  keccak256(bytes(name)) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  iszero\n  tag_22\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_23\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  dup3\n  add\n  swap2\n  jump(tag_22)\ntag_23:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_24:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_24\n  jumpi\ntag_22:\n  pop\n  pop\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  dup3\n  keccak256\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1299:1309  bytes('1') */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x01\n  dup4\n  mstore\n  shl(0xf8, 0x31)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1108:1380  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap7\n  swap1\n  swap7\n  mstore\n  dup6\n  dup3\n  add\n  mstore\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1289:1310  keccak256(bytes('1')) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1108:1380  abi.encode(... */\n  0x60\n  dup7\n  add\n  mstore\n  0x80\n  dup6\n  add\n  swap6\n  swap1\n  swap6\n  mstore\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1361:1365  this */\n  address\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1108:1380  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup6\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1108:1380  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  swap5\n  mstore\n  pop\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1085:1390  keccak256(... */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1066:1082  DOMAIN_SEPARATOR */\n  0x05\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1066:1390  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"v2-core-master/contracts/DEXV2ERC20.sol\":101:3460  contract DEXV2ERC20 is IDEXV2ERC20 {... */\n  tag_25\n  swap1\n  pop\n  jump\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_27\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_29)\ntag_27:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_29\n  jumpi\n  swap2\n  dup3\n  add\ntag_28:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_28)\ntag_29:\n  pop\n  tag_30\n  swap3\n  swap2\n  pop\n  tag_31\n  jump\t// in\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_31:\n  tag_32\n  swap2\n  swap1\ntag_33:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_33)\ntag_32:\n  swap1\n  jump\t// out\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":101:3460  contract DEXV2ERC20 is IDEXV2ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":101:3460  contract DEXV2ERC20 is IDEXV2ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":172:190  string public name */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":172:190  string public name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2211:2355  function approve(address spender, uint value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2211:2355  function approve(address spender, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_26\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":263:287  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2503:2798  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2503:2798  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":549:657  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_27\n      tag_33\n      jump\t// in\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":222:257  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":408:439  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_27\n      tag_37\n      jump\t// in\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":293:334  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":293:334  mapping(address => uint) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":663:701  mapping(address => uint) public nonces */\n    tag_11:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":663:701  mapping(address => uint) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":196:216  string public symbol */\n    tag_12:\n      tag_18\n      tag_45\n      jump\t// in\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2361:2497  function transfer(address to, uint value) external returns (bool) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2361:2497  function transfer(address to, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2804:3458  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2804:3458  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":340:401  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":340:401  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_58\n      jump\t// in\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":172:190  string public name */\n    tag_19:\n      0x00\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_60\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_59)\n    tag_60:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_61:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_61\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2211:2355  function approve(address spender, uint value) external returns (bool) {... */\n    tag_26:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2275:2279  bool */\n      0x00\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2291:2327  _approve(msg.sender, spender, value) */\n      tag_63\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2300:2310  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2312:2319  spender */\n      dup5\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2321:2326  value */\n      dup5\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2291:2299  _approve */\n      tag_64\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2291:2327  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_63:\n      pop\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2344:2348  true */\n      0x01\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2211:2355  function approve(address spender, uint value) external returns (bool) {... */\n    tag_62:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":263:287  uint  public totalSupply */\n    tag_28:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2503:2798  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2601:2616  allowance[from] */\n      dup4\n      and\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2581:2585  bool */\n      0x00\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2601:2616  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2601:2610  allowance */\n      0x04\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2601:2616  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2617:2627  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2601:2628  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2601:2640  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2597:2735  if (allowance[from][msg.sender] != uint(-1)) {... */\n      tag_66\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2686:2701  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2686:2695  allowance */\n      0x04\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2686:2701  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2702:2712  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2686:2713  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2686:2724  allowance[from][msg.sender].sub(value) */\n      tag_67\n      swap1\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2718:2723  value */\n      dup4\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2686:2724  allowance[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2686:2717  allowance[from][msg.sender].sub */\n      tag_68\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2686:2724  allowance[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2656:2671  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2656:2665  allowance */\n      0x04\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2656:2671  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2672:2682  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2656:2683  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2656:2724  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      sstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2597:2735  if (allowance[from][msg.sender] != uint(-1)) {... */\n    tag_66:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2744:2770  _transfer(from, to, value) */\n      tag_69\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2754:2758  from */\n      dup5\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2760:2762  to */\n      dup5\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2764:2769  value */\n      dup5\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2744:2753  _transfer */\n      tag_70\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2744:2770  _transfer(from, to, value) */\n      jump\t// in\n    tag_69:\n      pop\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2787:2791  true */\n      0x01\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2503:2798  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":549:657  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":591:657  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":549:657  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":222:257  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":255:257  18 */\n      0x12\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":222:257  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":408:439  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":293:334  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":663:701  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":196:216  string public symbol */\n    tag_45:\n      0x01\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      dup5\n      dup7\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_60\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_59)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2361:2497  function transfer(address to, uint value) external returns (bool) {... */\n    tag_52:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2421:2425  bool */\n      0x00\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2437:2469  _transfer(msg.sender, to, value) */\n      tag_63\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2447:2457  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2459:2461  to */\n      dup5\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2463:2468  value */\n      dup5\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2437:2446  _transfer */\n      tag_70\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2437:2469  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2804:3458  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_55:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2949:2964  block.timestamp */\n      timestamp\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2937:2945  deadline */\n      dup5\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2937:2964  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2929:2983  require(deadline >= block.timestamp, 'DEXV2: EXPIRED') */\n      tag_77\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x111156158c8e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_77:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3095:3111  DOMAIN_SEPARATOR */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3190:3203  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2993:3007  bytes32 digest */\n      0x00\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3190:3203  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3190:3196  nonces */\n      0x06\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3190:3203  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3190:3205  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3139:3216  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup3\n      mload\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":591:657  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3139:3216  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3139:3216  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3129:3217  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3033:3231  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3033:3231  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3010:3241  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3278:3304  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2993:3007  bytes32 digest */\n      swap2\n      swap4\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3190:3205  nonces[owner]++ */\n      swap3\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3278:3304  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3190:3205  nonces[owner]++ */\n      dup6\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3278:3304  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_78:\n      pop\n      pop\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3278:3304  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3322:3352  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3322:3381  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_79\n      jumpi\n      pop\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3376:3381  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3356:3381  recoveredAddress == owner */\n      and\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3356:3372  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3356:3381  recoveredAddress == owner */\n      and\n      eq\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3322:3381  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_79:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3314:3410  require(recoveredAddress != address(0) && recoveredAddress == owner, 'DEXV2: INVALID_SIGNATURE') */\n      tag_80\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x44455856323a20494e56414c49445f5349474e41545552450000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_80:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3420:3451  _approve(owner, spender, value) */\n      tag_81\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3429:3434  owner */\n      dup10\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3436:3443  spender */\n      dup10\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3445:3450  value */\n      dup10\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3420:3428  _approve */\n      tag_64\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":3420:3451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_81:\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2804:3458  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":340:401  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1817:1983  function _approve(address owner, address spender, uint value) private {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1897:1913  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1897:1906  allowance */\n      0x04\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1897:1913  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1897:1922  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1897:1930  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1945:1976  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1817:1983  function _approve(address owner, address spender, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":287:414  function sub(uint x, uint y) internal pure returns (uint z) {... */\n    tag_68:\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":370:375  x - y */\n      dup1\n      dup3\n      sub\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":365:381  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":357:407  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_62\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1989:2205  function _transfer(address from, address to, uint value) private {... */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2082:2097  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2082:2091  balanceOf */\n      0x03\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2082:2097  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2082:2108  balanceOf[from].sub(value) */\n      tag_86\n      swap1\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2102:2107  value */\n      dup3\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2082:2108  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2082:2101  balanceOf[from].sub */\n      tag_68\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2082:2108  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2064:2079  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2064:2073  balanceOf */\n      0x03\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2064:2079  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2064:2108  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2134:2147  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2134:2158  balanceOf[to].add(value) */\n      tag_87\n      swap1\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2152:2157  value */\n      dup3\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2134:2158  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2134:2151  balanceOf[to].add */\n      tag_88\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2134:2158  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2118:2131  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2118:2127  balanceOf */\n      0x03\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2118:2131  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2118:2158  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2173:2198  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2118:2131  balanceOf[to] */\n      swap2\n      swap4\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":2173:2198  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"v2-core-master/contracts/DEXV2ERC20.sol\":1989:2205  function _transfer(address from, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":155:281  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_88:\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":238:243  x + y */\n      dup1\n      dup3\n      add\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":233:249  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":225:274  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_62\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n\n    auxdata: 0xa265627a7a72315820362585e720671acd93514bf461fcceed33195627ccd33b89e282ddf8dd3fcf7264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000cf238038062000cf2833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405250508251620001b491506000906020850190620002d1565b508051620001ca906001906020840190620002d1565b50604051469080605262000ca082396052019050604051809103902060006040518082805460018160011615610100020316600290048015620002475780601f106200022457610100808354040283529182019162000247565b820191906000526020600020905b81548152906001019060200180831162000232575b505060408051918290038220828201825260018352603160f81b602093840152815180840196909652858201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606086015260808501959095523060a0808601919091528551808603909101815260c09094019094525050805191012060055550620003769050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031457805160ff191683800117855562000344565b8280016001018555821562000344579182015b828111156200034457825182559160200191906001019062000327565b506200035292915062000356565b5090565b6200037391905b808211156200035257600081556001016200035d565b90565b61091a80620003866000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b03813516906020013561039e565b604080519115158252519081900360200190f35b6101996103b5565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b038135811691602081013590911690604001356103bb565b610199610455565b6101f1610479565b6040805160ff9092168252519081900360200190f35b61019961047e565b6101996004803603602081101561022557600080fd5b50356001600160a01b0316610484565b6101996004803603602081101561024b57600080fd5b50356001600160a01b0316610496565b6100dc6104a8565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610502565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561050f565b005b610199600480360360408110156102f857600080fd5b506001600160a01b038135811691602001351661070d565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b505050505081565b60006103ab33848461072a565b5060015b92915050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001914610440576001600160a01b038416600090815260046020908152604080832033845290915290205461041b908363ffffffff61078c16565b6001600160a01b03851660009081526004602090815260408083203384529091529020555b61044b8484846107dc565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60055481565b60036020526000908152604090205481565b60066020526000908152604090205481565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103965780601f1061036b57610100808354040283529160200191610396565b60006103ab3384846107dc565b42841015610555576040805162461bcd60e51b815260206004820152600e60248201526d111156158c8e881156141254915160921b604482015290519081900360640190fd5b6005546001600160a01b0380891660008181526006602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015610670573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106a65750886001600160a01b0316816001600160a01b0316145b6106f7576040805162461bcd60e51b815260206004820152601860248201527f44455856323a20494e56414c49445f5349474e41545552450000000000000000604482015290519081900360640190fd5b61070289898961072a565b505050505050505050565b600460209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b808203828111156103af576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260036020526040902054610805908263ffffffff61078c16565b6001600160a01b03808516600090815260036020526040808220939093559084168152205461083a908263ffffffff61089616565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b808201828110156103af576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a72315820362585e720671acd93514bf461fcceed33195627ccd33b89e282ddf8dd3fcf7264736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCF2 CODESIZE SUB DUP1 PUSH3 0xCF2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH3 0x1B4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x2D1 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1CA SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x2D1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH3 0xCA0 DUP3 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH3 0x247 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x224 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x247 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x232 JUMPI JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP6 DUP3 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 SWAP5 MSTORE POP POP DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x5 SSTORE POP PUSH3 0x376 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x314 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x344 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x344 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x344 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x327 JUMP JUMPDEST POP PUSH3 0x352 SWAP3 SWAP2 POP PUSH3 0x356 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x373 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x352 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x35D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x91A DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x199 PUSH2 0x455 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x484 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x496 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x502 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x50F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x70D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB CALLER DUP5 DUP5 PUSH2 0x72A JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x440 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x41B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x78C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x44B DUP5 DUP5 DUP5 PUSH2 0x7DC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB CALLER DUP5 DUP5 PUSH2 0x7DC JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x555 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x111156158C8E8811561412549151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x670 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6F7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44455856323A20494E56414C49445F5349474E41545552450000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x702 DUP10 DUP10 DUP10 PUSH2 0x72A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x805 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x78C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x83A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x896 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x3AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLDATASIZE 0x25 DUP6 0xE7 KECCAK256 PUSH8 0x1ACD93514BF461FC 0xCE 0xED CALLER NOT JUMP 0x27 0xCC 0xD3 EXTCODESIZE DUP10 0xE2 DUP3 0xDD 0xF8 0xDD EXTCODEHASH 0xCF PUSH19 0x64736F6C63430005100032454950373132446F PUSH14 0x61696E28737472696E67206E616D PUSH6 0x2C737472696E PUSH8 0x2076657273696F6E 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E747261637429000000000000 ",
							"sourceMap": "101:3359:0:-;;;863:534;8:9:-1;5:2;;;30:1;27;20:12;5:2;863:534:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;863:534:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;863:534:0;;420:4:-1;411:14;;;;863:534:0;;;;;411:14:-1;863:534:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;863:534:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;863:534:0;;420:4:-1;411:14;;;;863:534:0;;;;;411:14:-1;863:534:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;863:534:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;863:534:0;;-1:-1:-1;;936:12:0;;;;-1:-1:-1;936:4:0;;:12;;;;;:::i;:::-;-1:-1:-1;958:16:0;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1136:95:0;;1040:7;;1136:95;;;;;;;;;;;;;;;;1265:4;1249:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1249:22:0;;;;;;;;;1299:10;;;;;;;;-1:-1:-1;;;1299:10:0;;;;;1108:272;;;;;;;;;;;;;1289:21;1108:272;;;;;;;;;;;1361:4;1108:272;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1108:272:0;;;;;;;-1:-1:-1;;1085:305:0;;;;;1066:16;:324;-1:-1:-1;101:3359:0;;-1:-1:-1;101:3359:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;101:3359:0;;;-1:-1:-1;101:3359:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b03813516906020013561039e565b604080519115158252519081900360200190f35b6101996103b5565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b038135811691602081013590911690604001356103bb565b610199610455565b6101f1610479565b6040805160ff9092168252519081900360200190f35b61019961047e565b6101996004803603602081101561022557600080fd5b50356001600160a01b0316610484565b6101996004803603602081101561024b57600080fd5b50356001600160a01b0316610496565b6100dc6104a8565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610502565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561050f565b005b610199600480360360408110156102f857600080fd5b506001600160a01b038135811691602001351661070d565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b505050505081565b60006103ab33848461072a565b5060015b92915050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001914610440576001600160a01b038416600090815260046020908152604080832033845290915290205461041b908363ffffffff61078c16565b6001600160a01b03851660009081526004602090815260408083203384529091529020555b61044b8484846107dc565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60055481565b60036020526000908152604090205481565b60066020526000908152604090205481565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103965780601f1061036b57610100808354040283529160200191610396565b60006103ab3384846107dc565b42841015610555576040805162461bcd60e51b815260206004820152600e60248201526d111156158c8e881156141254915160921b604482015290519081900360640190fd5b6005546001600160a01b0380891660008181526006602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015610670573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106a65750886001600160a01b0316816001600160a01b0316145b6106f7576040805162461bcd60e51b815260206004820152601860248201527f44455856323a20494e56414c49445f5349474e41545552450000000000000000604482015290519081900360640190fd5b61070289898961072a565b505050505050505050565b600460209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b808203828111156103af576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260036020526040902054610805908263ffffffff61078c16565b6001600160a01b03808516600090815260036020526040808220939093559084168152205461083a908263ffffffff61089616565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b808201828110156103af576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a72315820362585e720671acd93514bf461fcceed33195627ccd33b89e282ddf8dd3fcf7264736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x199 PUSH2 0x455 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x484 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x496 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x502 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x50F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x70D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB CALLER DUP5 DUP5 PUSH2 0x72A JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x440 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x41B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x78C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x44B DUP5 DUP5 DUP5 PUSH2 0x7DC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB CALLER DUP5 DUP5 PUSH2 0x7DC JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x555 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x111156158C8E8811561412549151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x670 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6F7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44455856323A20494E56414C49445F5349474E41545552450000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x702 DUP10 DUP10 DUP10 PUSH2 0x72A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x805 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x78C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x83A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x896 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x3AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLDATASIZE 0x25 DUP6 0xE7 KECCAK256 PUSH8 0x1ACD93514BF461FC 0xCE 0xED CALLER NOT JUMP 0x27 0xCC 0xD3 EXTCODESIZE DUP10 0xE2 DUP3 0xDD 0xF8 0xDD EXTCODEHASH 0xCF PUSH19 0x64736F6C634300051000320000000000000000 ",
							"sourceMap": "101:3359:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;101:3359:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;172:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;172:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2211:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2211:144:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;263:24;;;:::i;:::-;;;;;;;;;;;;;;;;2503:295;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2503:295:0;;;;;;;;;;;;;;;;;:::i;549:108::-;;;:::i;222:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;408:31;;;:::i;293:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;293:41:0;-1:-1:-1;;;;;293:41:0;;:::i;663:38::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;663:38:0;-1:-1:-1;;;;;663:38:0;;:::i;196:20::-;;;:::i;2361:136::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2361:136:0;;;;;;;;:::i;2804:654::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2804:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;340:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;340:61:0;;;;;;;;;;:::i;172:18::-;;;;;;;;;;;;;;;-1:-1:-1;;172:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2211:144::-;2275:4;2291:36;2300:10;2312:7;2321:5;2291:8;:36::i;:::-;-1:-1:-1;2344:4:0;2211:144;;;;;:::o;263:24::-;;;;:::o;2503:295::-;-1:-1:-1;;;;;2601:15:0;;2581:4;2601:15;;;:9;:15;;;;;;;;2617:10;2601:27;;;;;;;;-1:-1:-1;;2601:39:0;2597:138;;-1:-1:-1;;;;;2686:15:0;;;;;;:9;:15;;;;;;;;2702:10;2686:27;;;;;;;;:38;;2718:5;2686:38;:31;:38;:::i;:::-;-1:-1:-1;;;;;2656:15:0;;;;;;:9;:15;;;;;;;;2672:10;2656:27;;;;;;;:68;2597:138;2744:26;2754:4;2760:2;2764:5;2744:9;:26::i;:::-;-1:-1:-1;2787:4:0;2503:295;;;;;:::o;549:108::-;591:66;549:108;:::o;222:35::-;255:2;222:35;:::o;408:31::-;;;;:::o;293:41::-;;;;;;;;;;;;;:::o;663:38::-;;;;;;;;;;;;;:::o;196:20::-;;;;;;;;;;;;;;;-1:-1:-1;;196:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2361:136;2421:4;2437:32;2447:10;2459:2;2463:5;2437:9;:32::i;2804:654::-;2949:15;2937:8;:27;;2929:54;;;;;-1:-1:-1;;;2929:54:0;;;;;;;;;;;;-1:-1:-1;;;2929:54:0;;;;;;;;;;;;;;;3095:16;;-1:-1:-1;;;;;3190:13:0;;;2993:14;3190:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3139:77;;591:66;3139:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3139:77:0;;;;;3129:88;;;;;;-1:-1:-1;;;3033:198:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3033:198:0;;;;;;3010:231;;;;;;;;;3278:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2993:14;;3190:15;3278:26;;;;;-1:-1:-1;;3278:26:0;;;;;;;;;;3190:15;3278:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3278:26:0;;-1:-1:-1;;3278:26:0;;;-1:-1:-1;;;;;;;3322:30:0;;;;;;:59;;;3376:5;-1:-1:-1;;;;;3356:25:0;:16;-1:-1:-1;;;;;3356:25:0;;3322:59;3314:96;;;;;-1:-1:-1;;;3314:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:31;3429:5;3436:7;3445:5;3420:8;:31::i;:::-;2804:654;;;;;;;;;:::o;340:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1817:166::-;-1:-1:-1;;;;;1897:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;1945:31;;;;;;;;;;;;;;;;;1817:166;;;:::o;287:127:2:-;370:5;;;365:16;;;;357:50;;;;;-1:-1:-1;;;357:50:2;;;;;;;;;;;;-1:-1:-1;;;357:50:2;;;;;;;;;;;;;;1989:216:0;-1:-1:-1;;;;;2082:15:0;;;;;;:9;:15;;;;;;:26;;2102:5;2082:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2064:15:0;;;;;;;:9;:15;;;;;;:44;;;;2134:13;;;;;;;:24;;2152:5;2134:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2118:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2173:25;;;;;;;2118:13;;2173:25;;;;;;;;;;;;;1989:216;;;:::o;155:126:2:-;238:5;;;233:16;;;;225:49;;;;;-1:-1:-1;;;225:49:2;;;;;;;;;;;;-1:-1:-1;;;225:49:2;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "466000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1021",
								"PERMIT_TYPEHASH()": "287",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22343",
								"balanceOf(address)": "1169",
								"decimals()": "318",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "MSTORE"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MLOAD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSHSIZE"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "CODESIZE"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SUB"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSHSIZE"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP4"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "CODECOPY"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ADD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ADD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MLOAD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MLOAD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP4"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP3"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "DUP4"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP6"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "DUP9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "DUP3"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MLOAD"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP2"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP3"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ADD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP4"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP3"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ADD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "AND"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ISZERO"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "JUMPI"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP3"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SUB"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MLOAD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP4"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SUB"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "EXP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SUB"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "NOT"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "AND"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MSTORE"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ADD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "JUMPDEST"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MSTORE"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ADD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MLOAD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MLOAD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP4"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP3"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "DUP4"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP6"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "DUP9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "DUP3"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MLOAD"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP2"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP3"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ADD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP4"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP3"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ADD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "AND"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ISZERO"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "JUMPI"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP3"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SUB"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MLOAD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP4"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SUB"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "EXP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SUB"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "NOT"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "AND"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MSTORE"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "ADD"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "SWAP2"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 863,
									"end": 1397,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "DUP3"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "MLOAD"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 936,
									"end": 940,
									"name": "SWAP1"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "DUP6"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "ADD"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "SWAP1"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 936,
									"end": 948,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "DUP1"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "MLOAD"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "SWAP1"
								},
								{
									"begin": 958,
									"end": 964,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 958,
									"end": 964,
									"name": "SWAP1"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "DUP5"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "ADD"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "SWAP1"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 958,
									"end": 974,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "MLOAD"
								},
								{
									"begin": 1040,
									"end": 1047,
									"name": "CHAINID"
								},
								{
									"begin": 1040,
									"end": 1047,
									"name": "SWAP1"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "DUP1"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "DUP3"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "CODECOPY"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "ADD"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "SWAP1"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "POP"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "MLOAD"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "DUP1"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "SWAP2"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "SUB"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "SWAP1"
								},
								{
									"begin": 1136,
									"end": 1231,
									"name": "KECCAK256"
								},
								{
									"begin": 1265,
									"end": 1269,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "MLOAD"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP3"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SLOAD"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP2"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "AND"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "ISZERO"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "MUL"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SUB"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "AND"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DIV"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "ISZERO"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "JUMPI"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "LT"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "JUMPI"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP4"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SLOAD"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DIV"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "MUL"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP4"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "MSTORE"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP2"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP3"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "ADD"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP2"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "JUMP"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "JUMPDEST"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP3"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "ADD"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP2"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "MSTORE"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "KECCAK256"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "JUMPDEST"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP2"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SLOAD"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP2"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "MSTORE"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "ADD"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "ADD"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP4"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "GT"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "JUMPI"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "MLOAD"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP2"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP3"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SWAP1"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "SUB"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "DUP3"
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "KECCAK256"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "DUP3"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "DUP3"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "ADD"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "DUP3"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "MSTORE"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "DUP4"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "SWAP4"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "DUP5"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "ADD"
								},
								{
									"begin": 1299,
									"end": 1309,
									"name": "MSTORE"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP2"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "MLOAD"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP1"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP5"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP7"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP1"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP7"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP6"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP3"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1289,
									"end": 1310,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP7"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP6"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP6"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP1"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP6"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1361,
									"end": 1365,
									"name": "ADDRESS"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP1"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP7"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP2"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP1"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP2"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "DUP6"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP1"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP5"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP1"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "SWAP5"
								},
								{
									"begin": 1108,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1085,
									"end": 1390,
									"name": "DUP1"
								},
								{
									"begin": 1085,
									"end": 1390,
									"name": "MLOAD"
								},
								{
									"begin": 1085,
									"end": 1390,
									"name": "SWAP2"
								},
								{
									"begin": 1085,
									"end": 1390,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1390,
									"name": "KECCAK256"
								},
								{
									"begin": 1066,
									"end": 1082,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 1066,
									"end": 1390,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMP"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPDEST"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SLOAD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP2"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "AND"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ISZERO"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "MUL"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SUB"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "AND"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DIV"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "MSTORE"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "KECCAK256"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ADD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DIV"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP2"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ADD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "LT"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPI"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "MLOAD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "NOT"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "AND"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP4"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ADD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "OR"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP6"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SSTORE"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMP"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPDEST"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ADD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ADD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP6"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SSTORE"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ISZERO"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPI"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP2"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ADD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPDEST"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP2"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "GT"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ISZERO"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPI"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "MLOAD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SSTORE"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP2"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ADD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP2"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ADD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMP"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPDEST"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "POP"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPDEST"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP2"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPDEST"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP3"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "GT"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ISZERO"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPI"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP2"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SSTORE"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "ADD"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMP"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPDEST"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "JUMPDEST"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "DUP1"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "CODECOPY"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 101,
									"end": 3460,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820362585e720671acd93514bf461fcceed33195627ccd33b89e282ddf8dd3fcf7264736f6c63430005100032",
									".code": [
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "MSTORE"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "POP"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "LT"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "SHR"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "GT"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "GT"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMP"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPDEST"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMP"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPDEST"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "EQ"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPI"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "JUMPDEST"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 3460,
											"name": "REVERT"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP6"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "AND"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ISZERO"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPI"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SUB"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SUB"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "EXP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SUB"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "NOT"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "AND"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SUB"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "RETURN"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "JUMPDEST"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "DUP1"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "DUP2"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "AND"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "ADD"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "JUMPDEST"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "DUP1"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "MLOAD"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "SWAP2"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "ISZERO"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "ISZERO"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "DUP3"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "MSTORE"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "MLOAD"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "DUP2"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "SUB"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "ADD"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "RETURN"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "MLOAD"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "SWAP2"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "DUP3"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "MLOAD"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "SWAP1"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "SWAP1"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "SUB"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "ADD"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "SWAP1"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "RETURN"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "JUMPDEST"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "DUP1"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "DUP2"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "DUP2"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "AND"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "SWAP2"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "DUP2"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "ADD"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "SWAP2"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "AND"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "SWAP1"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "ADD"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 657,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 549,
											"end": 657,
											"name": "JUMPDEST"
										},
										{
											"begin": 549,
											"end": 657,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 549,
											"end": 657,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 549,
											"end": 657,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "JUMPDEST"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "JUMPDEST"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "DUP1"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "MLOAD"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "SWAP1"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "SWAP3"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "AND"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "DUP3"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "MSTORE"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "MLOAD"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "SWAP1"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "DUP2"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "SWAP1"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "SUB"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "ADD"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "SWAP1"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "RETURN"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "JUMPDEST"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "JUMPDEST"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "DUP1"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "AND"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "DUP1"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "JUMPDEST"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "DUP1"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "DUP2"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "AND"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "SWAP1"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "ADD"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "JUMPDEST"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "DUP1"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "AND"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "SWAP2"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "SWAP2"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "AND"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "DUP3"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "AND"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "JUMPDEST"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "STOP"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "JUMPDEST"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "DUP2"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "DUP2"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "AND"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "ADD"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "AND"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SLOAD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP6"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "AND"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ISZERO"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP5"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "AND"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DIV"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP5"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DIV"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP5"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MUL"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP5"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ISZERO"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPI"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "LT"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPI"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SLOAD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DIV"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MUL"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "KECCAK256"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SLOAD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "GT"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPI"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SUB"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "AND"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 190,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "JUMPDEST"
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2327,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "CALLER"
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "DUP5"
										},
										{
											"begin": 2321,
											"end": 2326,
											"name": "DUP5"
										},
										{
											"begin": 2291,
											"end": 2299,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2291,
											"end": 2327,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2291,
											"end": 2327,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2291,
											"end": 2327,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2344,
											"end": 2348,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "JUMPDEST"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "SWAP3"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "SWAP2"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "POP"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "POP"
										},
										{
											"begin": 2211,
											"end": 2355,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "SLOAD"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 287,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "DUP4"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "AND"
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "SWAP1"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "DUP2"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "MSTORE"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "SWAP1"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "DUP2"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "MSTORE"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "DUP1"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "DUP4"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "KECCAK256"
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "CALLER"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP5"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "MSTORE"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SWAP1"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SWAP2"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "MSTORE"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP2"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "KECCAK256"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2601,
											"end": 2640,
											"name": "EQ"
										},
										{
											"begin": 2597,
											"end": 2735,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2597,
											"end": 2735,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "DUP5"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "AND"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "DUP2"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "MSTORE"
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "DUP2"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "MSTORE"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "DUP1"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "DUP4"
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "KECCAK256"
										},
										{
											"begin": 2702,
											"end": 2712,
											"name": "CALLER"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "DUP5"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "MSTORE"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "SWAP2"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "MSTORE"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "KECCAK256"
										},
										{
											"begin": 2686,
											"end": 2713,
											"name": "SLOAD"
										},
										{
											"begin": 2686,
											"end": 2724,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2686,
											"end": 2724,
											"name": "SWAP1"
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "DUP4"
										},
										{
											"begin": 2686,
											"end": 2724,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2717,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2686,
											"end": 2724,
											"name": "AND"
										},
										{
											"begin": 2686,
											"end": 2724,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2686,
											"end": 2724,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2686,
											"end": 2724,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "DUP6"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "AND"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "SWAP1"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "DUP2"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "MSTORE"
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "SWAP1"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "DUP2"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "MSTORE"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "DUP1"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "DUP4"
										},
										{
											"begin": 2656,
											"end": 2671,
											"name": "KECCAK256"
										},
										{
											"begin": 2672,
											"end": 2682,
											"name": "CALLER"
										},
										{
											"begin": 2656,
											"end": 2683,
											"name": "DUP5"
										},
										{
											"begin": 2656,
											"end": 2683,
											"name": "MSTORE"
										},
										{
											"begin": 2656,
											"end": 2683,
											"name": "SWAP1"
										},
										{
											"begin": 2656,
											"end": 2683,
											"name": "SWAP2"
										},
										{
											"begin": 2656,
											"end": 2683,
											"name": "MSTORE"
										},
										{
											"begin": 2656,
											"end": 2683,
											"name": "SWAP1"
										},
										{
											"begin": 2656,
											"end": 2683,
											"name": "KECCAK256"
										},
										{
											"begin": 2656,
											"end": 2724,
											"name": "SSTORE"
										},
										{
											"begin": 2597,
											"end": 2735,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2597,
											"end": 2735,
											"name": "JUMPDEST"
										},
										{
											"begin": 2744,
											"end": 2770,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2754,
											"end": 2758,
											"name": "DUP5"
										},
										{
											"begin": 2760,
											"end": 2762,
											"name": "DUP5"
										},
										{
											"begin": 2764,
											"end": 2769,
											"name": "DUP5"
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2744,
											"end": 2770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2744,
											"end": 2770,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2744,
											"end": 2770,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2787,
											"end": 2791,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "SWAP4"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "SWAP3"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "POP"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "POP"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "POP"
										},
										{
											"begin": 2503,
											"end": 2798,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 549,
											"end": 657,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 549,
											"end": 657,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 657,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 549,
											"end": 657,
											"name": "DUP2"
										},
										{
											"begin": 549,
											"end": 657,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "JUMPDEST"
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "DUP2"
										},
										{
											"begin": 222,
											"end": 257,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "JUMPDEST"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "SLOAD"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "DUP2"
										},
										{
											"begin": 408,
											"end": 439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "JUMPDEST"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "MSTORE"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "SWAP1"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "DUP2"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "MSTORE"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "SWAP1"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "KECCAK256"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "SLOAD"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "DUP2"
										},
										{
											"begin": 293,
											"end": 334,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "MSTORE"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "DUP2"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "MSTORE"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "KECCAK256"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SLOAD"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "DUP2"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SLOAD"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP5"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP7"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "AND"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "ISZERO"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP5"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "AND"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP4"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP4"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DIV"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP5"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DIV"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP5"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "MUL"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP5"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP3"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP3"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP4"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "ISZERO"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "LT"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP4"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SLOAD"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DIV"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "MUL"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP4"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMP"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2361,
											"end": 2497,
											"name": "JUMPDEST"
										},
										{
											"begin": 2421,
											"end": 2425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "CALLER"
										},
										{
											"begin": 2459,
											"end": 2461,
											"name": "DUP5"
										},
										{
											"begin": 2463,
											"end": 2468,
											"name": "DUP5"
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "JUMPDEST"
										},
										{
											"begin": 2949,
											"end": 2964,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2937,
											"end": 2945,
											"name": "DUP5"
										},
										{
											"begin": 2937,
											"end": 2964,
											"name": "LT"
										},
										{
											"begin": 2937,
											"end": 2964,
											"name": "ISZERO"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "JUMPI"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "DUP1"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "DUP2"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "MSTORE"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "DUP3"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "ADD"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "MSTORE"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "DUP3"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "ADD"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "111156158C8E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "DUP3"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "ADD"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "MSTORE"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "SWAP1"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "MLOAD"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "SWAP1"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "DUP2"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "SWAP1"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "SUB"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "ADD"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "SWAP1"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "REVERT"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2929,
											"end": 2983,
											"name": "JUMPDEST"
										},
										{
											"begin": 3095,
											"end": 3111,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3095,
											"end": 3111,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "DUP1"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "DUP10"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "AND"
										},
										{
											"begin": 2993,
											"end": 3007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "DUP2"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "DUP2"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "MSTORE"
										},
										{
											"begin": 3190,
											"end": 3196,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "SWAP1"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "DUP2"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "MSTORE"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "DUP1"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "DUP4"
										},
										{
											"begin": 3190,
											"end": 3203,
											"name": "KECCAK256"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "DUP1"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "SLOAD"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "DUP1"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "DUP3"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "ADD"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "SWAP1"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "SWAP3"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "SSTORE"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP3"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "MLOAD"
										},
										{
											"begin": 591,
											"end": 657,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP2"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP7"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "MSTORE"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP1"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP5"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "SWAP7"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "SWAP7"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "MSTORE"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "SWAP6"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP14"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "AND"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP7"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "MSTORE"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP6"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP13"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "MSTORE"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP6"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "SWAP6"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "SWAP6"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "MSTORE"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP1"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP6"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP12"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "MSTORE"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP2"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP6"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "DUP3"
										},
										{
											"begin": 3139,
											"end": 3216,
											"name": "MSTORE"
										},
										{
											"begin": 3129,
											"end": 3217,
											"name": "DUP1"
										},
										{
											"begin": 3129,
											"end": 3217,
											"name": "MLOAD"
										},
										{
											"begin": 3129,
											"end": 3217,
											"name": "SWAP1"
										},
										{
											"begin": 3129,
											"end": 3217,
											"name": "DUP4"
										},
										{
											"begin": 3129,
											"end": 3217,
											"name": "ADD"
										},
										{
											"begin": 3129,
											"end": 3217,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "DUP7"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "ADD"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "MSTORE"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "DUP6"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "ADD"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "SWAP7"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "SWAP1"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "SWAP7"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "MSTORE"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "DUP1"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "DUP6"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "ADD"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "SWAP7"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "SWAP1"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "SWAP7"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "MSTORE"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "DUP1"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "DUP5"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "ADD"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "DUP1"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "DUP3"
										},
										{
											"begin": 3033,
											"end": 3231,
											"name": "MSTORE"
										},
										{
											"begin": 3010,
											"end": 3241,
											"name": "DUP7"
										},
										{
											"begin": 3010,
											"end": 3241,
											"name": "MLOAD"
										},
										{
											"begin": 3010,
											"end": 3241,
											"name": "SWAP7"
										},
										{
											"begin": 3010,
											"end": 3241,
											"name": "DUP4"
										},
										{
											"begin": 3010,
											"end": 3241,
											"name": "ADD"
										},
										{
											"begin": 3010,
											"end": 3241,
											"name": "SWAP7"
										},
										{
											"begin": 3010,
											"end": 3241,
											"name": "SWAP1"
										},
										{
											"begin": 3010,
											"end": 3241,
											"name": "SWAP7"
										},
										{
											"begin": 3010,
											"end": 3241,
											"name": "KECCAK256"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP6"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP4"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "MSTORE"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP5"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP1"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP3"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "MSTORE"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP7"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "MSTORE"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP10"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "AND"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP6"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "MSTORE"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP5"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP9"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "MSTORE"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP5"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP8"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "MSTORE"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "MLOAD"
										},
										{
											"begin": 2993,
											"end": 3007,
											"name": "SWAP2"
										},
										{
											"begin": 2993,
											"end": 3007,
											"name": "SWAP4"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "SWAP3"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP1"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP3"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP2"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP3"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "DUP2"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SUB"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP2"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP1"
										},
										{
											"begin": 3190,
											"end": 3205,
											"name": "DUP6"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "GAS"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "STATICCALL"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "MLOAD"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "DUP2"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "AND"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "ISZERO"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "DUP1"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "ISZERO"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "SWAP1"
										},
										{
											"begin": 3322,
											"end": 3381,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 3322,
											"end": 3381,
											"name": "JUMPI"
										},
										{
											"begin": 3322,
											"end": 3381,
											"name": "POP"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3356,
											"end": 3381,
											"name": "AND"
										},
										{
											"begin": 3356,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3356,
											"end": 3381,
											"name": "AND"
										},
										{
											"begin": 3356,
											"end": 3381,
											"name": "EQ"
										},
										{
											"begin": 3322,
											"end": 3381,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 3322,
											"end": 3381,
											"name": "JUMPDEST"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "JUMPI"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "DUP1"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "DUP2"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "MSTORE"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "DUP3"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "ADD"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "MSTORE"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "DUP3"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "ADD"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "MSTORE"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "PUSH",
											"value": "44455856323A20494E56414C49445F5349474E41545552450000000000000000"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "DUP3"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "ADD"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "MSTORE"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "SWAP1"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "MLOAD"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "SWAP1"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "DUP2"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "SWAP1"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "SUB"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "ADD"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "SWAP1"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "REVERT"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 3314,
											"end": 3410,
											"name": "JUMPDEST"
										},
										{
											"begin": 3420,
											"end": 3451,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP10"
										},
										{
											"begin": 3436,
											"end": 3443,
											"name": "DUP10"
										},
										{
											"begin": 3445,
											"end": 3450,
											"name": "DUP10"
										},
										{
											"begin": 3420,
											"end": 3428,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3420,
											"end": 3451,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3420,
											"end": 3451,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 3420,
											"end": 3451,
											"name": "JUMPDEST"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "POP"
										},
										{
											"begin": 2804,
											"end": 3458,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "JUMPDEST"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "DUP2"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "MSTORE"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "SWAP3"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "DUP4"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "MSTORE"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "DUP5"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "KECCAK256"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "MSTORE"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "DUP3"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "MSTORE"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "KECCAK256"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "SLOAD"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "DUP2"
										},
										{
											"begin": 340,
											"end": 401,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1983,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1817,
											"end": 1983,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "DUP1"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "DUP5"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "AND"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "DUP2"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "DUP2"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "MSTORE"
										},
										{
											"begin": 1897,
											"end": 1906,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "SWAP1"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "DUP2"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "MSTORE"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "DUP1"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "DUP4"
										},
										{
											"begin": 1897,
											"end": 1913,
											"name": "KECCAK256"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "SWAP5"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "DUP8"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "AND"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "DUP5"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "MSTORE"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "SWAP5"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "DUP3"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "MSTORE"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "DUP3"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "KECCAK256"
										},
										{
											"begin": 1897,
											"end": 1930,
											"name": "DUP6"
										},
										{
											"begin": 1897,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1897,
											"end": 1930,
											"name": "SSTORE"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "DUP2"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "MLOAD"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "DUP6"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "DUP2"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "MSTORE"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "SWAP2"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "MLOAD"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "SWAP3"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "DUP2"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "SWAP1"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "SUB"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "SWAP1"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "SWAP2"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "ADD"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "SWAP1"
										},
										{
											"begin": 1945,
											"end": 1976,
											"name": "LOG3"
										},
										{
											"begin": 1817,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 1817,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 1817,
											"end": 1983,
											"name": "POP"
										},
										{
											"begin": 1817,
											"end": 1983,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DUP3"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SUB"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "DUP3"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "DUP2"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "GT"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "ISZERO"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MLOAD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SUB"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "REVERT"
										},
										{
											"begin": 1989,
											"end": 2205,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1989,
											"end": 2205,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "DUP4"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "AND"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP1"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "DUP2"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "MSTORE"
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "MSTORE"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP1"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "KECCAK256"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SLOAD"
										},
										{
											"begin": 2082,
											"end": 2108,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2082,
											"end": 2108,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2107,
											"name": "DUP3"
										},
										{
											"begin": 2082,
											"end": 2108,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2101,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2082,
											"end": 2108,
											"name": "AND"
										},
										{
											"begin": 2082,
											"end": 2108,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2108,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2082,
											"end": 2108,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "DUP1"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "DUP6"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "AND"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "SWAP1"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "DUP2"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "MSTORE"
										},
										{
											"begin": 2064,
											"end": 2073,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "MSTORE"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "DUP1"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "DUP3"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "KECCAK256"
										},
										{
											"begin": 2064,
											"end": 2108,
											"name": "SWAP4"
										},
										{
											"begin": 2064,
											"end": 2108,
											"name": "SWAP1"
										},
										{
											"begin": 2064,
											"end": 2108,
											"name": "SWAP4"
										},
										{
											"begin": 2064,
											"end": 2108,
											"name": "SSTORE"
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "SWAP1"
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "DUP5"
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "AND"
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "DUP2"
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "MSTORE"
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "KECCAK256"
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "SLOAD"
										},
										{
											"begin": 2134,
											"end": 2158,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2134,
											"end": 2158,
											"name": "SWAP1"
										},
										{
											"begin": 2152,
											"end": 2157,
											"name": "DUP3"
										},
										{
											"begin": 2134,
											"end": 2158,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2134,
											"end": 2158,
											"name": "AND"
										},
										{
											"begin": 2134,
											"end": 2158,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2158,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2134,
											"end": 2158,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "DUP1"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "DUP5"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "AND"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "DUP2"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "DUP2"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "MSTORE"
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "SWAP1"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "DUP2"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "MSTORE"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "SWAP2"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "DUP3"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "SWAP1"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "KECCAK256"
										},
										{
											"begin": 2118,
											"end": 2158,
											"name": "SWAP5"
										},
										{
											"begin": 2118,
											"end": 2158,
											"name": "SWAP1"
										},
										{
											"begin": 2118,
											"end": 2158,
											"name": "SWAP5"
										},
										{
											"begin": 2118,
											"end": 2158,
											"name": "SSTORE"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "DUP1"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "MLOAD"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "DUP6"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "DUP2"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "MSTORE"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "SWAP1"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "MLOAD"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "SWAP2"
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "SWAP4"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "SWAP3"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "DUP8"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "AND"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "SWAP3"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "SWAP3"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "SWAP2"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "DUP3"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "SWAP1"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "SUB"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "ADD"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "SWAP1"
										},
										{
											"begin": 2173,
											"end": 2198,
											"name": "LOG3"
										},
										{
											"begin": 1989,
											"end": 2205,
											"name": "POP"
										},
										{
											"begin": 1989,
											"end": 2205,
											"name": "POP"
										},
										{
											"begin": 1989,
											"end": 2205,
											"name": "POP"
										},
										{
											"begin": 1989,
											"end": 2205,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "DUP3"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "ADD"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "DUP3"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "LT"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "ISZERO"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "JUMPI"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "REVERT"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/DEXV2ERC20.sol\":\"DEXV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/DEXV2ERC20.sol\":{\"keccak256\":\"0x1d99b6084dda4f6547feb37311084531fd5eb79d4f192ad01b74b87aa3c0e6e8\",\"urls\":[\"bzz-raw://fb6dcb1931725150a524733babbe1e10bfea2ece591e79c73544877dc762d801\",\"dweb:/ipfs/QmbmgJUkqpuLyMcHGwSwR2TrAhXXhZz9LM2mitjurHWDZK\"]},\"v2-core-master/contracts/interfaces/IDEXV2ERC20.sol\":{\"keccak256\":\"0x9307b0dd750a36588c11dfc7d7d6adef8b46a2d554236b925a7d922b08019fb3\",\"urls\":[\"bzz-raw://9df30d88bb109ae5fd554b85e67873c5df243745764358fd12ae971536e751f1\",\"dweb:/ipfs/QmSd4LMrMq4xiDUhFqaQUadcg5oZjmF5NJvMxtYvs9yYQy\"]},\"v2-core-master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "v2-core-master/contracts/DEXV2ERC20.sol:DEXV2ERC20",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 12,
								"contract": "v2-core-master/contracts/DEXV2ERC20.sol:DEXV2ERC20",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 17,
								"contract": "v2-core-master/contracts/DEXV2ERC20.sol:DEXV2ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 21,
								"contract": "v2-core-master/contracts/DEXV2ERC20.sol:DEXV2ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 27,
								"contract": "v2-core-master/contracts/DEXV2ERC20.sol:DEXV2ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 29,
								"contract": "v2-core-master/contracts/DEXV2ERC20.sol:DEXV2ERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "5",
								"type": "t_bytes32"
							},
							{
								"astId": 36,
								"contract": "v2-core-master/contracts/DEXV2ERC20.sol:DEXV2ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"v2-core-master/contracts/interfaces/IDEXV2ERC20.sol": {
				"IDEXV2ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/interfaces/IDEXV2ERC20.sol\":\"IDEXV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/interfaces/IDEXV2ERC20.sol\":{\"keccak256\":\"0x9307b0dd750a36588c11dfc7d7d6adef8b46a2d554236b925a7d922b08019fb3\",\"urls\":[\"bzz-raw://9df30d88bb109ae5fd554b85e67873c5df243745764358fd12ae971536e751f1\",\"dweb:/ipfs/QmSd4LMrMq4xiDUhFqaQUadcg5oZjmF5NJvMxtYvs9yYQy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"v2-core-master/contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"v2-core-master/contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582073ced849df98e8176c6d3e52794cfcf20dd475dc95d301925c819e05098a504a64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582073ced849df98e8176c6d3e52794cfcf20dd475dc95d301925c819e05098a504a64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH20 0xCED849DF98E8176C6D3E52794CFCF20DD475DC95 0xD3 ADD SWAP3 0x5C DUP2 SWAP15 SDIV MULMOD DUP11 POP 0x4A PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "132:430:2:-;;:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582073ced849df98e8176c6d3e52794cfcf20dd475dc95d301925c819e05098a504a64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH20 0xCED849DF98E8176C6D3E52794CFCF20DD475DC95 0xD3 ADD SWAP3 0x5C DUP2 SWAP15 SDIV MULMOD DUP11 POP 0x4A PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "132:430:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582073ced849df98e8176c6d3e52794cfcf20dd475dc95d301925c819e05098a504a64736f6c63430005100032",
									".code": [
										{
											"begin": 132,
											"end": 562,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "ADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "EQ"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "MSTORE"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"v2-core-master/contracts/DEXV2ERC20.sol": {
				"ast": {
					"absolutePath": "v2-core-master/contracts/DEXV2ERC20.sol",
					"exportedSymbols": {
						"DEXV2ERC20": [
							394
						]
					},
					"id": 395,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "v2-core-master/contracts/interfaces/IDEXV2ERC20.sol",
							"file": "./interfaces/IDEXV2ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 513,
							"src": "26:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "v2-core-master/contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 588,
							"src": "65:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IDEXV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 512,
										"src": "124:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDEXV2ERC20_$512",
											"typeString": "contract IDEXV2ERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "124:11:0"
								}
							],
							"contractDependencies": [
								512
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394,
								512
							],
							"name": "DEXV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 587,
										"src": "148:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$587",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "142:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "161:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 10,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "172:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "172:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 12,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "196:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 11,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "196:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 15,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "222:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 13,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "222:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "255:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 17,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "263:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "263:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 21,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "293:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "301:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "293:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 19,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "312:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "340:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 26,
										"keyType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "348:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "340:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 25,
											"keyType": {
												"id": 23,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "367:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "359:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 24,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "378:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "408:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 32,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "549:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "549:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "591:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 36,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "663:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 35,
										"keyType": {
											"id": 33,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "671:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "663:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 34,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "682:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 44,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "723:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "746:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "771:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "722:60:0"
									},
									"src": "708:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 52,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "803:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "825:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "845:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "802:54:0"
									},
									"src": "788:69:0"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "926:471:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "936:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "943:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "936:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "936:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "958:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 64,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "958:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "958:16:0"
											},
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "984:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 67,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "984:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "984:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 68,
															"isOffset": false,
															"isSlot": false,
															"src": "1029:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 70,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1006:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 71,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1066:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1146:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 75,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 596,
																			"src": "1136:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1136:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 80,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 10,
																						"src": "1265:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					],
																					"id": 79,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1259:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 81,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1259:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_storage_ptr",
																					"typeString": "bytes storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_storage_ptr",
																					"typeString": "bytes storage pointer"
																				}
																			],
																			"id": 78,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 596,
																			"src": "1249:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 82,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1249:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 85,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1305:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 84,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1299:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 86,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1299:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 83,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 596,
																			"src": "1289:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1289:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 88,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 68,
																		"src": "1328:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 90,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 620,
																				"src": "1361:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DEXV2ERC20_$394",
																					"typeString": "contract DEXV2ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DEXV2ERC20_$394",
																					"typeString": "contract DEXV2ERC20"
																				}
																			],
																			"id": 89,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1353:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1353:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 73,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "1108:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1108:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1108:272:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 72,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "1085:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1085:305:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1066:324:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1066:324:0"
											}
										]
									},
									"documentation": null,
									"id": 97,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "875:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "875:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "896:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 55,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "896:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:44:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 394,
									"src": "863:534:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1451:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1461:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 107,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "1491:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 105,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1475:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 536,
															"src": "1475:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1475:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1461:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1461:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 111,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1507:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 113,
														"indexExpression": {
															"argumentTypes": null,
															"id": 112,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "1517:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1507:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 118,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "1541:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 114,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1523:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 116,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 115,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "1533:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1523:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 536,
															"src": "1523:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1523:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1507:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1507:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1579:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1571:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 126,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "1583:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 127,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1587:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 122,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															52
														],
														"referencedDeclaration": 52,
														"src": "1562:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1562:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "1557:36:0"
											}
										]
									},
									"documentation": null,
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1418:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1430:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1430:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1417:24:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:0:0"
									},
									"scope": 394,
									"src": "1403:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1656:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 138,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1666:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 140,
														"indexExpression": {
															"argumentTypes": null,
															"id": 139,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1676:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1666:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1704:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 141,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1684:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 143,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 142,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "1694:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1684:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 558,
															"src": "1684:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1684:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1666:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1666:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 149,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1720:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 152,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1750:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 150,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1734:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 558,
															"src": "1734:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1734:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1720:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1720:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 157,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1780:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1794:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1786:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1786:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 161,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "1798:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 156,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															52
														],
														"referencedDeclaration": 52,
														"src": "1771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1771:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "EmitStatement",
												"src": "1766:38:0"
											}
										]
									},
									"documentation": null,
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1635:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1620:26:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:0:0"
									},
									"scope": 394,
									"src": "1606:205:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1887:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 174,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1897:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 177,
															"indexExpression": {
																"argumentTypes": null,
																"id": 175,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1907:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1897:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 178,
														"indexExpression": {
															"argumentTypes": null,
															"id": 176,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "1914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1897:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 179,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1925:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1897:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1897:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 183,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1954:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 184,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "1961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 185,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 182,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															44
														],
														"referencedDeclaration": 44,
														"src": "1945:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "EmitStatement",
												"src": "1940:36:0"
											}
										]
									},
									"documentation": null,
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1835:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1850:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1867:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1867:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1834:44:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1887:0:0"
									},
									"scope": 394,
									"src": "1817:166:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2054:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 198,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "2064:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 200,
														"indexExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2074:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2064:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 205,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "2102:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 201,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "2082:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 203,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "2092:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2082:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 558,
															"src": "2082:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2082:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2064:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2064:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 209,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "2118:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 211,
														"indexExpression": {
															"argumentTypes": null,
															"id": 210,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2128:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2118:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "2152:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 212,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "2134:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 214,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "2144:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2134:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 536,
															"src": "2134:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2134:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2118:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2118:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 221,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2182:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 222,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2188:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 223,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2192:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 220,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															52
														],
														"referencedDeclaration": 52,
														"src": "2173:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2173:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "EmitStatement",
												"src": "2168:30:0"
											}
										]
									},
									"documentation": null,
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2008:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2022:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2034:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2034:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:38:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2054:0:0"
									},
									"scope": 394,
									"src": "1989:216:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "2281:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 237,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "2300:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2300:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 239,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 240,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2321:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2291:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2291:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2344:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 235,
												"id": 244,
												"nodeType": "Return",
												"src": "2337:11:0"
											}
										]
									},
									"documentation": null,
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2228:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2227:29:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2275:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2274:6:0"
									},
									"scope": 394,
									"src": "2211:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 457,
									"visibility": "external"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2427:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 256,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "2447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2447:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 258,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "2459:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 259,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "2463:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 255,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "2437:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2437:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2437:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2486:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 254,
												"id": 263,
												"nodeType": "Return",
												"src": "2479:11:0"
											}
										]
									},
									"documentation": null,
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2379:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2391:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2378:24:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2421:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2420:6:0"
									},
									"scope": 394,
									"src": "2361:136:0",
									"stateMutability": "nonpayable",
									"superFunction": 466,
									"visibility": "external"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "2587:211:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 276,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2601:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 278,
															"indexExpression": {
																"argumentTypes": null,
																"id": 277,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "2611:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2601:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 281,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 279,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "2617:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2617:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2601:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2637:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2638:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2632:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2632:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2601:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 305,
												"nodeType": "IfStatement",
												"src": "2597:138:0",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "2642:93:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 287,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "2656:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 291,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 288,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 267,
																			"src": "2666:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2656:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 292,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 289,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "2672:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2672:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2656:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "2718:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 293,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 27,
																					"src": "2686:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 295,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 294,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 267,
																					"src": "2696:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2686:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 298,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 296,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "2702:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2702:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2686:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 558,
																		"src": "2686:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2686:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2656:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "2656:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 307,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2754:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 308,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2760:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 309,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "2764:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 306,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "2744:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "2744:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2787:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 275,
												"id": 313,
												"nodeType": "Return",
												"src": "2780:11:0"
											}
										]
									},
									"documentation": null,
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2525:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2539:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2551:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2551:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2524:38:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2581:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2580:6:0"
									},
									"scope": 394,
									"src": "2503:295:0",
									"stateMutability": "nonpayable",
									"superFunction": 477,
									"visibility": "external"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "2919:539:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 333,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "2937:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 334,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "2949:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2949:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2937:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "44455856323a2045585049524544",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2966:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_edef0ff66c7825b8f1d6c6a9cdd80252705ac9a935a57694b1ed008f3d5c6321",
																"typeString": "literal_string \"DEXV2: EXPIRED\""
															},
															"value": "DEXV2: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_edef0ff66c7825b8f1d6c6a9cdd80252705ac9a935a57694b1ed008f3d5c6321",
																"typeString": "literal_string \"DEXV2: EXPIRED\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															605,
															606
														],
														"referencedDeclaration": 606,
														"src": "2929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2929:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "2929:54:0"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "2993:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 340,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3067:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 346,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "3095:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 350,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 32,
																					"src": "3150:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 351,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "3167:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 352,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "3174:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 353,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 321,
																					"src": "3183:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3190:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 354,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 36,
																							"src": "3190:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 356,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 355,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 317,
																							"src": "3197:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3190:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 358,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 323,
																					"src": "3207:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 348,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 589,
																					"src": "3139:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3139:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3139:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 347,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "3129:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3129:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 343,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "3033:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3033:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3033:198:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 342,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "3010:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3010:231:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2993:248:0"
											},
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "3251:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 364,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3251:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 367,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "3288:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 368,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "3296:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 369,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3299:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 370,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 366,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3278:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3278:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3251:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 374,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3322:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3350:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3342:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3342:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3322:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 379,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3356:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 380,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "3376:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3356:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3322:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "44455856323a20494e56414c49445f5349474e4154555245",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3383:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ce20e4dc33e9e9a9a11d0226df867c34f98d1c14b097f195f84dd55a13d00cd",
																"typeString": "literal_string \"DEXV2: INVALID_SIGNATURE\""
															},
															"value": "DEXV2: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3ce20e4dc33e9e9a9a11d0226df867c34f98d1c14b097f195f84dd55a13d00cd",
																"typeString": "literal_string \"DEXV2: INVALID_SIGNATURE\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															605,
															606
														],
														"referencedDeclaration": 606,
														"src": "3314:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "3314:96:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 387,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3429:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 388,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3436:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 389,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "3445:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "3420:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3420:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "3420:31:0"
											}
										]
									},
									"documentation": null,
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2820:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2835:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2852:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2864:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2879:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 324,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2879:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2888:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2899:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2819:90:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2919:0:0"
									},
									"scope": 394,
									"src": "2804:654:0",
									"stateMutability": "nonpayable",
									"superFunction": 511,
									"visibility": "external"
								}
							],
							"scope": 395,
							"src": "101:3359:0"
						}
					],
					"src": "0:3461:0"
				},
				"id": 0
			},
			"v2-core-master/contracts/interfaces/IDEXV2ERC20.sol": {
				"ast": {
					"absolutePath": "v2-core-master/contracts/interfaces/IDEXV2ERC20.sol",
					"exportedSymbols": {
						"IDEXV2ERC20": [
							512
						]
					},
					"id": 513,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "IDEXV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 404,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "69:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "92:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "92:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "117:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "117:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "68:60:1"
									},
									"src": "54:75:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 412,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "149:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "171:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "191:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "191:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "148:54:1"
									},
									"src": "134:69:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:2:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "248:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "248:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "247:15:1"
									},
									"scope": 512,
									"src": "209:54:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "309:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "309:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "308:15:1"
									},
									"scope": 512,
									"src": "268:56:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:2:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "372:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "372:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "371:7:1"
									},
									"scope": 512,
									"src": "329:50:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:1"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "430:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "429:6:1"
									},
									"scope": 512,
									"src": "384:52:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "460:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "459:15:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "498:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "498:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "497:6:1"
									},
									"scope": 512,
									"src": "441:63:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "528:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "543:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "527:32:1"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "583:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "582:6:1"
									},
									"scope": 512,
									"src": "509:80:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "612:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "629:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "611:29:1"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "659:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "659:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "658:6:1"
									},
									"scope": 512,
									"src": "595:70:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "688:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "700:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "700:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "687:24:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "730:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "730:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "729:6:1"
									},
									"scope": 512,
									"src": "670:66:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "763:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "777:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "789:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "789:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "762:38:1"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "819:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "819:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "818:6:1"
									},
									"scope": 512,
									"src": "741:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "856:2:1"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 479,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "881:9:1"
									},
									"scope": 512,
									"src": "831:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "920:2:1"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "946:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "945:9:1"
									},
									"scope": 512,
									"src": "896:59:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "976:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "975:15:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1014:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1013:6:1"
									},
									"scope": 512,
									"src": "960:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1042:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1057:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1074:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1074:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1086:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1086:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1101:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 503,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1101:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1110:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 505,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1121:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1041:90:1"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1140:0:1"
									},
									"scope": 512,
									"src": "1026:115:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 513,
							"src": "26:1117:1"
						}
					],
					"src": "0:1144:1"
				},
				"id": 1
			},
			"v2-core-master/contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "v2-core-master/contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							587
						]
					},
					"id": 588,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 514,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 587,
							"linearizedBaseContracts": [
								587
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "215:66:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 524,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "234:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 525,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 516,
																				"src": "238:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 526,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 518,
																				"src": "242:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "238:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "234:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 529,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "233:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 530,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "248:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "233:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "251:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															605,
															606
														],
														"referencedDeclaration": 606,
														"src": "225:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "225:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "225:49:2"
											}
										]
									},
									"documentation": null,
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "168:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "168:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "176:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "167:16:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "207:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:8:2"
									},
									"scope": 587,
									"src": "155:126:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "347:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 546,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 543,
																			"src": "366:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 547,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "370:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 548,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 540,
																				"src": "374:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "370:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "366:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "365:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 552,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "380:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "365:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "383:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															605,
															606
														],
														"referencedDeclaration": 606,
														"src": "357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "357:50:2"
											}
										]
									},
									"documentation": null,
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "300:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "308:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "299:16:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "339:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "339:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "338:8:2"
									},
									"scope": 587,
									"src": "287:127:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "480:80:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 568,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "498:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "503:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "498:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 571,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 565,
																					"src": "509:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 574,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 572,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 560,
																						"src": "513:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 573,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 562,
																						"src": "517:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "513:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "509:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 576,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "508:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 577,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "522:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "508:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 579,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "527:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "508:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "498:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															605,
															606
														],
														"referencedDeclaration": 606,
														"src": "490:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "490:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "490:63:2"
											}
										]
									},
									"documentation": null,
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "433:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "441:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "441:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:16:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "472:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "471:8:2"
									},
									"scope": 587,
									"src": "420:140:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 588,
							"src": "132:430:2"
						}
					],
					"src": "0:563:2"
				},
				"id": 2
			}
		}
	}
}